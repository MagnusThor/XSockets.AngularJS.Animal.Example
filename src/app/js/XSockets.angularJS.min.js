angular.module("xsockets.angular",[]).provider("xsockets",function(){var n=this;this.$get=["$q","$rootScope",function(t,i){function c(n,t,f){u.subscribe(n,function(t){i.$apply(function(){r[n].invoke(t)},f)},f)}function l(n,t,f){u.one(n,function(t){i.$apply(function(){r[n].invoke(t)},f);i.$broadcast(n,t)},f)}function a(n,t,f,e){u.many(n,t,function(t){i.$apply(function(){r[n].invoke(t)},e)},e)}function v(n,t){if(r.hasOwnProperty(n))u.unsubscribe(n),delete r[n],t&&t(n);else throw"Missing '"+n+"'.unable to remove binding";}function s(n,t,i){e?u.publish(n,t):f.push({t:n,d:t||{}});i&&i(t,e)}function y(n,t){return r.hasOwnProperty(n)?r[n]:(r[n]=new o,l(n,r[n],t),r[n])}function p(n,t,i){return r.hasOwnProperty(n)?r[n]:(r[n]=new o,a(n,t,r[n],i),r[n])}function w(n,t){return r.hasOwnProperty(n)?r[n]:(r[n]=new o,c(n,r[n],t),r[n])}var e,r={},u,f=[],o=function(){function n(n){this._a=n}return n.prototype.delegate=function(n){return this._a=n,this},n.prototype.invoke=function(n){return this._a(n),this},n}(),h=function(){var r=t.defer();u=new XSockets.WebSocket(n.url);u.on(XSockets.Events.open,function(n){i.$apply(function(){r.resolve(n)})});return r.promise},b=function(){var n=t.defer();u.on(XSockets.Events.close,function(t){i.$apply(function(){n.resolve(t)})});u.on(XSockets.Events.close,function(t){i.$apply(function(){n.resolve(t)})});return n.promise},k=function(){var n=t.defer();u.on(XSockets.Events.onError,function(t){i.$apply(function(){n.resolve(t)})});return n.promise},d=function(){return u.clientType()},g=function(){u.close()},nt=function(){var n=t.all(h()).then(function(n){return e=!0,f.forEach(function(n){s(n.t,n.d)}),f=[],n})},tt=function(){return u.readyState()},it=t.all(h()).then(function(n){return e=!0,f.forEach(function(n){s(n.t,n.d)}),f=[],n});return{clientType:d,one:y,many:p,subscribe:w,unsubscribe:v,publish:s,onopen:it,onerror:k(),onclose:b(),close:g,reconnect:nt,readyState:tt}}];this.url="ws://joinaspot.com:4509/Generic";this.setUrl=function(n){this.url=n}});
/*
//# sourceMappingURL=XSockets.angularJS.min.js.map
*/